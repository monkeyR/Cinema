<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAFAAUAAD/4QBWRXhpZgAATU0AKgAAAAgABAESAAMAAAABAAEAAAEaAAUAAAAB
        AAAAPgEbAAUAAAABAAAARgEoAAMAAAABAAIAAAAAAAAAFAAAAAEAAAAUAAAAAQAA/9sAQwACAQECAQEC
        AgICAgICAgMFAwMDAwMGBAQDBQcGBwcHBgcHCAkLCQgICggHBwoNCgoLDAwMDAcJDg8NDA4LDAwM/9sA
        QwECAgIDAwMGAwMGDAgHCAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwM/8AAEQgAZAA3AwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//E
        ALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYX
        GBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SV
        lpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5
        +v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMR
        BAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJ
        SlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5
        usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A/fyjNVda1a30
        LSLq9uri1s7azheeWe4kEcMKKpZndjwqgAkk8AAmvgT4R/8ABWfQ/iX4mTTvEXjrTfCPiDEU02hahILU
        QCSNZVjWQIC2EdevzDoQGBAzqVoQ+NpHVhsDicQm8PTlLl1fKm7Lu7LQ/QXNFfMfjP8Abn8KQ6ZbQQ+M
        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
</value>
  </data>
</root>